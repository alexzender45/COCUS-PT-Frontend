{"ast":null,"code":"import _defineProperty from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/alex/programming/COCUS-PT-Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/alex/programming/COCUS-PT-Frontend/src/components/notes/Edit.tsx\";\nimport * as React from 'react';\nimport { withRouter } from 'react-router-dom';\n\nvar EditNote =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EditNote, _React$Component);\n\n  function EditNote(props) {\n    var _this;\n\n    _classCallCheck(this, EditNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(EditNote).call(this, props));\n\n    _this.processFormSubmission =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var formData, encryptedData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n\n                _this.setState({\n                  loading: true\n                });\n\n                formData = {\n                  title: _this.state.values.title ? _this.state.values.title : _this.state.note.title,\n                  description: _this.state.values.description ? _this.state.values.description : _this.state.note.description,\n                  id: _this.state.note.id,\n                  created_at: _this.state.note.created_at\n                };\n                encryptedData = btoa(JSON.stringify(formData));\n                localStorage.setItem(_this.state.id.toString(), encryptedData);\n\n                _this.setState({\n                  submitSuccess: true,\n                  loading: false\n                });\n\n                setTimeout(function () {\n                  _this.props.history.push('/');\n                }, 1500);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.setValues = function (values) {\n      _this.setState({\n        values: _objectSpread({}, _this.state.values, values)\n      });\n    };\n\n    _this.handleInputChanges = function (e) {\n      e.preventDefault();\n\n      _this.setValues(_defineProperty({}, e.currentTarget.id, e.currentTarget.value));\n    };\n\n    _this.state = {\n      id: _this.props.match.params.id,\n      note: {},\n      values: {},\n      loading: false,\n      submitSuccess: false\n    };\n    return _this;\n  }\n\n  _createClass(EditNote, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var data = localStorage.getItem(this.state.id.toString());\n\n      if (data) {\n        var decrypt = atob(data);\n\n        if (decrypt) {\n          this.setState({\n            note: JSON.parse(decrypt)\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          submitSuccess = _this$state.submitSuccess,\n          loading = _this$state.loading;\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, this.state.note && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \" Note List Management App\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \" Built with React.js and TypeScript \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-12 form-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \" Edit Note \"), submitSuccess && React.createElement(\"div\", {\n        className: \"alert alert-info\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Note details has been edited successfully \"), React.createElement(\"form\", {\n        id: \"create-note-form\",\n        onSubmit: this.processFormSubmission,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \" Tile \"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"title\",\n        defaultValue: this.state.note.title,\n        onChange: function onChange(e) {\n          return _this2.handleInputChanges(e);\n        },\n        name: \"title\",\n        className: \"form-control\",\n        placeholder: \"Enter Title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \" Description \"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"description\",\n        defaultValue: this.state.note.description,\n        onChange: function onChange(e) {\n          return _this2.handleInputChanges(e);\n        },\n        name: \"description\",\n        className: \"form-control\",\n        placeholder: \"Enter Description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group col-md-4 pull-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-success\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Edit Note \"), loading && React.createElement(\"span\", {\n        className: \"fa fa-circle-o-notch fa-spin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return EditNote;\n}(React.Component);\n\nexport default withRouter(EditNote);","map":{"version":3,"sources":["/Users/alex/programming/COCUS-PT-Frontend/src/components/notes/Edit.tsx"],"names":["React","withRouter","EditNote","props","processFormSubmission","e","preventDefault","setState","loading","formData","title","state","values","note","description","id","created_at","encryptedData","btoa","JSON","stringify","localStorage","setItem","toString","submitSuccess","setTimeout","history","push","setValues","handleInputChanges","currentTarget","value","match","params","data","getItem","decrypt","atob","parse","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nexport interface IValues {\n    [key: string]: any;\n}\n\nexport interface IFormState {\n    id: number,\n    note: any;\n    values: IValues;\n    submitSuccess: boolean;\n    loading: boolean;\n}\n\nclass EditNote extends React.Component<RouteComponentProps<any>, IFormState> {\n    constructor(props: RouteComponentProps) {\n        super(props);\n        this.state = {\n            id: this.props.match.params.id,\n            note: {},\n            values: {},\n            loading: false,\n            submitSuccess: false,\n        }\n    }\n\n    public componentDidMount(): void {\n        const data = localStorage.getItem(this.state.id.toString());\n        if (data) {\n        const decrypt = atob(data);\n        if (decrypt) {\n            this.setState({ note: JSON.parse(decrypt) })\n    }\n}\n}\n\n    private processFormSubmission = async (e: React.FormEvent<HTMLFormElement>): Promise<void> => {\n        e.preventDefault();\n        this.setState({ loading: true });\n        const formData = {\n            title: this.state.values.title ? this.state.values.title : this.state.note.title,\n            description: this.state.values.description ? this.state.values.description : this.state.note.description,\n            id: this.state.note.id,\n            created_at: this.state.note.created_at\n        }\n        const encryptedData = btoa(JSON.stringify(formData));\n            localStorage.setItem(this.state.id.toString(), encryptedData);\n            this.setState({ submitSuccess: true, loading: false })\n            setTimeout(() => {\n                this.props.history.push('/');\n            }, 1500)\n    }\n\n\n    private setValues = (values: IValues) => {\n        this.setState({ values: { ...this.state.values, ...values } });\n    }\n\n    private handleInputChanges = (e: React.FormEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        this.setValues({ [e.currentTarget.id]: e.currentTarget.value })\n    }\n\n    public render() {\n        const { submitSuccess, loading } = this.state;\n        return (\n            <div className=\"App\">\n                {this.state.note &&\n                    <div>\n                        < h1 > Note List Management App</h1>\n                        <p> Built with React.js and TypeScript </p>\n\n\n                        <div>\n                            <div className={\"col-md-12 form-wrapper\"}>\n                                <h2> Edit Note </h2>\n\n                                {submitSuccess && (\n                                    <div className=\"alert alert-info\" role=\"alert\">\n                                        Note details has been edited successfully </div>\n                                )}\n\n                                <form id={\"create-note-form\"} onSubmit={this.processFormSubmission} noValidate={true}>\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"title\"> Tile </label>\n                                        <input type=\"text\" id=\"title\" defaultValue={this.state.note.title} onChange={(e) => this.handleInputChanges(e)} name=\"title\" className=\"form-control\" placeholder=\"Enter Title\" />\n                                    </div>\n\n                                    <div className=\"form-group col-md-12\">\n                                        <label htmlFor=\"description\"> Description </label>\n                                        <input type=\"text\" id=\"description\" defaultValue={this.state.note.description} onChange={(e) => this.handleInputChanges(e)} name=\"description\" className=\"form-control\" placeholder=\"Enter Description\" />\n                                    </div>\n\n                                    <div className=\"form-group col-md-4 pull-right\">\n                                        <button className=\"btn btn-success\" type=\"submit\">\n                                            Edit Note </button>\n                                        {loading &&\n                                            <span className=\"fa fa-circle-o-notch fa-spin\" />\n                                        }\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default withRouter(EditNote)\n"]},"metadata":{},"sourceType":"module"}